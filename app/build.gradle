buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0"
    }
}

plugins {
    id "java"
    id "idea"
    id "eclipse"
    id "application"
    id "com.google.cloud.tools.jib" version "3.3.1"
    id "com.github.davidmc24.gradle.plugin.avro" version "1.7.0"
}

java {
    sourceCompatibility = "16"
    targetCompatibility = "16"
    version = "0.0.1"
}

repositories {
    mavenCentral()

    maven {
        url "https://packages.confluent.io/maven"
    }
}

test {
    useJUnitPlatform()
}

apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "java"

ext {
    javaMainClass = "org.sxram.kafka.tutorial.App"
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    // implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-core:1.3.5'
    implementation 'ch.qos.logback:logback-classic:1.3.5'

    implementation "org.apache.avro:avro:1.11.1"
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'org.apache.kafka:kafka-clients:3.3.1'
    implementation 'org.apache.kafka:kafka-streams:3.3.1'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
    testImplementation "org.apache.kafka:kafka-streams-test-utils:3.4.0"
    // testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.mockito:mockito-core:2.18.0'
    testImplementation 'org.assertj:assertj-core:3.24.2'
}

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compileClasspath.collect { it.getName() }.join(" "),
                "Main-Class": javaMainClass
        )
    }
}

shadowJar {
    archiveBaseName.set('kafka-java-getting-started')
    archiveClassifier.set('all')
}

application {
    getMainClass().set(javaMainClass)
}